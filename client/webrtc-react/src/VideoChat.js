import React, { useEffect, useRef } from 'react';

const WebRTCComponent = () => {
    const localVideoRef = useRef(null);
    const remoteVideoRef = useRef(null);
    const peerConnection = useRef(null);
    const signalingChannel = 'http://127.0.0.1:5000/signal'; // Flask endpoint for signaling

    useEffect(() => {
        // Initialize WebRTC and get media stream
        const initWebRTC = async () => {
            const localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
            localVideoRef.current.srcObject = localStream;

            // Create a new RTCPeerConnection
            peerConnection.current = new RTCPeerConnection();

            // Add local stream tracks to peer connection
            localStream.getTracks().forEach(track => {
                peerConnection.current.addTrack(track, localStream);
            });

            // Handle remote stream
            peerConnection.current.ontrack = (event) => {
                remoteVideoRef.current.srcObject = event.streams[0];
            };

            // Handle ICE candidates
            peerConnection.current.onicecandidate = async (event) => {
                if (event.candidate) {
                    await fetch(signalingChannel, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ candidate: event.candidate })
                    });
                }
            };
        };

        initWebRTC();
    }, []);

    const startCall = async () => {
        const offer = await peerConnection.current.createOffer();
        await peerConnection.current.setLocalDescription(offer);

        // Send the offer to the Flask server
        await fetch(signalingChannel, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ offer })
        });
    };

    return (
        <div>
            <h1>WebRTC Video Chat</h1>
            <video ref={localVideoRef} autoPlay playsInline muted />
            <video ref={remoteVideoRef} autoPlay playsInline />
            <button onClick={startCall}>Start Call</button>
        </div>
    );
};

export default WebRTCComponent;
